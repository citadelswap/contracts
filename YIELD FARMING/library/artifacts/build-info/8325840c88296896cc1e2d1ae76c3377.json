{
	"id": "8325840c88296896cc1e2d1ae76c3377",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"FARMING/library/Whitelist.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.12;\r\n\r\nimport \"../access/Ownable.sol\";\r\n\r\n\r\ncontract Whitelist is Ownable {\r\n    mapping(address => bool) private _whitelist;\r\n    bool private _disable;                      // default - false means whitelist feature is working on. if true no more use of whitelist\r\n\r\n    event Whitelisted(address indexed _address, bool whitelist);\r\n    event EnableWhitelist();\r\n    event DisableWhitelist();\r\n\r\n    modifier onlyWhitelisted {\r\n        require(_disable || _whitelist[msg.sender], \"Whitelist: caller is not on the whitelist\");\r\n        _;\r\n    }\r\n\r\n    function isWhitelist(address _address) public view returns (bool) {\r\n        return _whitelist[_address];\r\n    }\r\n\r\n    function setWhitelist(address _address, bool _on) external onlyOwner {\r\n        _whitelist[_address] = _on;\r\n\r\n        emit Whitelisted(_address, _on);\r\n    }\r\n\r\n    function disableWhitelist(bool disable) external onlyOwner {\r\n        _disable = disable;\r\n        if (disable) {\r\n            emit DisableWhitelist();\r\n        } else {\r\n            emit EnableWhitelist();\r\n        }\r\n    }\r\n}"
			},
			"FARMING/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >=0.4.0;\r\n\r\nimport './Context.sol';\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), 'Ownable: caller is not the owner');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0), 'Ownable: new owner is the zero address');\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}"
			},
			"FARMING/access/Context.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >=0.4.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    constructor() internal {}\r\n\r\n    function _msgSender() internal view returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"FARMING/access/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FARMING/access/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"FARMING/access/Context.sol\":{\"keccak256\":\"0xdfad2f67f9b90ef469e7cf45254362ba070ed7b6b24178522a0f23b17ef742c6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8a55551a42833a3ce0d60a6f7f697e983aba2daa16c1032311e9ca41b896dfaf\",\"dweb:/ipfs/QmQKqXVrMfhwPLb184AmCxPNMiK1KxrpxVavwfnbuJQXAL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FARMING/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FARMING/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"FARMING/access/Context.sol\":{\"keccak256\":\"0xdfad2f67f9b90ef469e7cf45254362ba070ed7b6b24178522a0f23b17ef742c6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8a55551a42833a3ce0d60a6f7f697e983aba2daa16c1032311e9ca41b896dfaf\",\"dweb:/ipfs/QmQKqXVrMfhwPLb184AmCxPNMiK1KxrpxVavwfnbuJQXAL\"]},\"FARMING/access/Ownable.sol\":{\"keccak256\":\"0xa036bec141099cb001627e520dfa5858b3c16ed4c4cbbda6ed9b040d307b2817\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f739c77000cff2f766c2dd0f465a10860a2a7887ab1fbf0f52bb5d8622266e46\",\"dweb:/ipfs/QmUeiTWQ7r1wc7H9ifNMnWcNx5iAncBVLf7n65NfPEzQ3d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "FARMING/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FARMING/library/Whitelist.sol": {
				"Whitelist": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "DisableWhitelist",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EnableWhitelist",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "whitelist",
									"type": "bool"
								}
							],
							"name": "Whitelisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "disable",
									"type": "bool"
								}
							],
							"name": "disableWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isWhitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_on",
									"type": "bool"
								}
							],
							"name": "setWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FARMING/library/Whitelist.sol\":98:1121  contract Whitelist is Ownable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"FARMING/access/Ownable.sol\":901:918  address msgSender */\n  0x00\n    /* \"FARMING/access/Ownable.sol\":921:933  _msgSender() */\n  tag_6\n    /* \"FARMING/access/Ownable.sol\":921:931  _msgSender */\n  tag_7\n    /* \"FARMING/access/Ownable.sol\":921:933  _msgSender() */\n  jump\t// in\ntag_6:\n    /* \"FARMING/access/Ownable.sol\":944:950  _owner */\n  0x00\n    /* \"FARMING/access/Ownable.sol\":944:962  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"FARMING/access/Ownable.sol\":978:1021  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"FARMING/access/Ownable.sol\":944:962  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"FARMING/access/Ownable.sol\":978:1021  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"FARMING/access/Ownable.sol\":944:950  _owner */\n  dup3\n  swap1\n    /* \"FARMING/access/Ownable.sol\":978:1021  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"FARMING/access/Ownable.sol\":867:1029  constructor() internal {\r... */\n  pop\n    /* \"FARMING/library/Whitelist.sol\":98:1121  contract Whitelist is Ownable {\r... */\n  jump(tag_8)\n    /* \"FARMING/access/Context.sol\":799:897  function _msgSender() internal view returns (address payable) {\r... */\ntag_7:\n    /* \"FARMING/access/Context.sol\":879:889  msg.sender */\n  caller\n    /* \"FARMING/access/Context.sol\":799:897  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"FARMING/library/Whitelist.sol\":98:1121  contract Whitelist is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FARMING/library/Whitelist.sol\":98:1121  contract Whitelist is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x49ba1b49\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x53d6fd59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc683630d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"FARMING/library/Whitelist.sol\":894:1118  function disableWhitelist(bool disable) external onlyOwner {\r... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      calldataload\n      iszero\n      iszero\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"FARMING/library/Whitelist.sol\":728:886  function setWhitelist(address _address, bool _on) external onlyOwner {\r... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_14\n      jump\t// in\n        /* \"FARMING/access/Ownable.sol\":1752:1892  function renounceOwnership() public onlyOwner {\r... */\n    tag_5:\n      tag_9\n      tag_16\n      jump\t// in\n        /* \"FARMING/access/Ownable.sol\":1110:1189  function owner() public view returns (address) {\r... */\n    tag_6:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"FARMING/library/Whitelist.sol\":608:720  function isWhitelist(address _address) public view returns (bool) {\r... */\n    tag_7:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_21\n      jump\t// in\n    tag_19:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"FARMING/access/Ownable.sol\":2047:2156  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_8:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_24\n      jump\t// in\n        /* \"FARMING/library/Whitelist.sol\":894:1118  function disableWhitelist(bool disable) external onlyOwner {\r... */\n    tag_11:\n        /* \"FARMING/access/Ownable.sol\":1332:1344  _msgSender() */\n      tag_26\n        /* \"FARMING/access/Ownable.sol\":1332:1342  _msgSender */\n      tag_27\n        /* \"FARMING/access/Ownable.sol\":1332:1344  _msgSender() */\n      jump\t// in\n    tag_26:\n        /* \"FARMING/access/Ownable.sol\":1322:1328  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"FARMING/access/Ownable.sol\":1322:1344  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"FARMING/access/Ownable.sol\":1314:1381  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_28\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_28:\n        /* \"FARMING/library/Whitelist.sol\":964:972  _disable */\n      0x02\n        /* \"FARMING/library/Whitelist.sol\":964:982  _disable = disable */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      dup1\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"FARMING/library/Whitelist.sol\":993:1111  if (disable) {\r... */\n      tag_30\n      jumpi\n        /* \"FARMING/library/Whitelist.sol\":1026:1044  DisableWhitelist() */\n      mload(0x40)\n      0x508560e15717a4e9058b9a19d806cb679004a1bd953376f71fda71c141e5dc53\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"FARMING/library/Whitelist.sol\":993:1111  if (disable) {\r... */\n      jump(tag_31)\n    tag_30:\n        /* \"FARMING/library/Whitelist.sol\":1082:1099  EnableWhitelist() */\n      mload(0x40)\n      0xa2927d972f7cfc5ff8b7ad79f9adf0bdb885d0e569f40d0037df2e1299616ae0\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"FARMING/library/Whitelist.sol\":993:1111  if (disable) {\r... */\n    tag_31:\n        /* \"FARMING/library/Whitelist.sol\":894:1118  function disableWhitelist(bool disable) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"FARMING/library/Whitelist.sol\":728:886  function setWhitelist(address _address, bool _on) external onlyOwner {\r... */\n    tag_14:\n        /* \"FARMING/access/Ownable.sol\":1332:1344  _msgSender() */\n      tag_33\n        /* \"FARMING/access/Ownable.sol\":1332:1342  _msgSender */\n      tag_27\n        /* \"FARMING/access/Ownable.sol\":1332:1344  _msgSender() */\n      jump\t// in\n    tag_33:\n        /* \"FARMING/access/Ownable.sol\":1322:1328  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"FARMING/access/Ownable.sol\":1322:1344  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"FARMING/access/Ownable.sol\":1314:1381  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_34\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FARMING/library/Whitelist.sol\":808:828  _whitelist[_address] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"FARMING/library/Whitelist.sol\":808:818  _whitelist */\n      0x01\n        /* \"FARMING/library/Whitelist.sol\":808:828  _whitelist[_address] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"FARMING/library/Whitelist.sol\":808:834  _whitelist[_address] = _on */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"FARMING/library/Whitelist.sol\":852:878  Whitelisted(_address, _on) */\n      dup3\n      mload\n      swap1\n      dup2\n      mstore\n      swap2\n      mload\n      0xa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f26440\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log2\n        /* \"FARMING/library/Whitelist.sol\":728:886  function setWhitelist(address _address, bool _on) external onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"FARMING/access/Ownable.sol\":1752:1892  function renounceOwnership() public onlyOwner {\r... */\n    tag_16:\n        /* \"FARMING/access/Ownable.sol\":1332:1344  _msgSender() */\n      tag_37\n        /* \"FARMING/access/Ownable.sol\":1332:1342  _msgSender */\n      tag_27\n        /* \"FARMING/access/Ownable.sol\":1332:1344  _msgSender() */\n      jump\t// in\n    tag_37:\n        /* \"FARMING/access/Ownable.sol\":1322:1328  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"FARMING/access/Ownable.sol\":1322:1344  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"FARMING/access/Ownable.sol\":1314:1381  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_38\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_38:\n        /* \"FARMING/access/Ownable.sol\":1851:1852  0 */\n      0x00\n        /* \"FARMING/access/Ownable.sol\":1835:1841  _owner */\n      dup1\n      sload\n        /* \"FARMING/access/Ownable.sol\":1814:1854  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FARMING/access/Ownable.sol\":1835:1841  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"FARMING/access/Ownable.sol\":1814:1854  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"FARMING/access/Ownable.sol\":1851:1852  0 */\n      dup4\n      swap1\n        /* \"FARMING/access/Ownable.sol\":1814:1854  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"FARMING/access/Ownable.sol\":1882:1883  0 */\n      0x00\n        /* \"FARMING/access/Ownable.sol\":1865:1884  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"FARMING/access/Ownable.sol\":1752:1892  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"FARMING/access/Ownable.sol\":1110:1189  function owner() public view returns (address) {\r... */\n    tag_18:\n        /* \"FARMING/access/Ownable.sol\":1148:1155  address */\n      0x00\n        /* \"FARMING/access/Ownable.sol\":1175:1181  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"FARMING/access/Ownable.sol\":1110:1189  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"FARMING/library/Whitelist.sol\":608:720  function isWhitelist(address _address) public view returns (bool) {\r... */\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FARMING/library/Whitelist.sol\":692:712  _whitelist[_address] */\n      and\n        /* \"FARMING/library/Whitelist.sol\":668:672  bool */\n      0x00\n        /* \"FARMING/library/Whitelist.sol\":692:712  _whitelist[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"FARMING/library/Whitelist.sol\":692:702  _whitelist */\n      0x01\n        /* \"FARMING/library/Whitelist.sol\":692:712  _whitelist[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"FARMING/library/Whitelist.sol\":608:720  function isWhitelist(address _address) public view returns (bool) {\r... */\n      jump\t// out\n        /* \"FARMING/access/Ownable.sol\":2047:2156  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_24:\n        /* \"FARMING/access/Ownable.sol\":1332:1344  _msgSender() */\n      tag_43\n        /* \"FARMING/access/Ownable.sol\":1332:1342  _msgSender */\n      tag_27\n        /* \"FARMING/access/Ownable.sol\":1332:1344  _msgSender() */\n      jump\t// in\n    tag_43:\n        /* \"FARMING/access/Ownable.sol\":1322:1328  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"FARMING/access/Ownable.sol\":1322:1344  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"FARMING/access/Ownable.sol\":1314:1381  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_44\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_44:\n        /* \"FARMING/access/Ownable.sol\":2120:2148  _transferOwnership(newOwner) */\n      tag_31\n        /* \"FARMING/access/Ownable.sol\":2139:2147  newOwner */\n      dup2\n        /* \"FARMING/access/Ownable.sol\":2120:2138  _transferOwnership */\n      tag_47\n        /* \"FARMING/access/Ownable.sol\":2120:2148  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"FARMING/access/Context.sol\":799:897  function _msgSender() internal view returns (address payable) {\r... */\n    tag_27:\n        /* \"FARMING/access/Context.sol\":879:889  msg.sender */\n      caller\n        /* \"FARMING/access/Context.sol\":799:897  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"FARMING/access/Ownable.sol\":2262:2491  function _transferOwnership(address newOwner) internal {\r... */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FARMING/access/Ownable.sol\":2336:2358  newOwner != address(0) */\n      dup2\n      and\n        /* \"FARMING/access/Ownable.sol\":2328:2401  require(newOwner != address(0), 'Ownable: new owner is the zero address') */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"FARMING/access/Ownable.sol\":2438:2444  _owner */\n      0x00\n      dup1\n      sload\n        /* \"FARMING/access/Ownable.sol\":2417:2455  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"FARMING/access/Ownable.sol\":2438:2444  _owner */\n      swap3\n      and\n      swap2\n        /* \"FARMING/access/Ownable.sol\":2417:2455  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"FARMING/access/Ownable.sol\":2466:2472  _owner */\n      0x00\n        /* \"FARMING/access/Ownable.sol\":2466:2483  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"FARMING/access/Ownable.sol\":2262:2491  function _transferOwnership(address newOwner) internal {\r... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa2646970667358221220be0bf67c28572153439087af6f978b53b29943f16017096640f11d8e2c57d38864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6105148061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806349ba1b491461006757806353d6fd5914610088578063715018a6146100b65780638da5cb5b146100be578063c683630d146100e2578063f2fde38b1461011c575b600080fd5b6100866004803603602081101561007d57600080fd5b50351515610142565b005b6100866004803603604081101561009e57600080fd5b506001600160a01b038135169060200135151561020c565b6100866102c4565b6100c6610366565b604080516001600160a01b039092168252519081900360200190f35b610108600480360360208110156100f857600080fd5b50356001600160a01b0316610375565b604080519115158252519081900360200190f35b6100866004803603602081101561013257600080fd5b50356001600160a01b0316610393565b61014a6103f4565b6000546001600160a01b0390811691161461019a576040805162461bcd60e51b815260206004820181905260248201526000805160206104bf833981519152604482015290519081900360640190fd5b6002805460ff191682158015919091179091556101df576040517f508560e15717a4e9058b9a19d806cb679004a1bd953376f71fda71c141e5dc5390600090a1610209565b6040517fa2927d972f7cfc5ff8b7ad79f9adf0bdb885d0e569f40d0037df2e1299616ae090600090a15b50565b6102146103f4565b6000546001600160a01b03908116911614610264576040805162461bcd60e51b815260206004820181905260248201526000805160206104bf833981519152604482015290519081900360640190fd5b6001600160a01b038216600081815260016020908152604091829020805460ff1916851515908117909155825190815291517fa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f264409281900390910190a25050565b6102cc6103f4565b6000546001600160a01b0390811691161461031c576040805162461bcd60e51b815260206004820181905260248201526000805160206104bf833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6001600160a01b031660009081526001602052604090205460ff1690565b61039b6103f4565b6000546001600160a01b039081169116146103eb576040805162461bcd60e51b815260206004820181905260248201526000805160206104bf833981519152604482015290519081900360640190fd5b610209816103f8565b3390565b6001600160a01b03811661043d5760405162461bcd60e51b81526004018080602001828103825260268152602001806104996026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220be0bf67c28572153439087af6f978b53b29943f16017096640f11d8e2c57d38864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x1B PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x514 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49BA1B49 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xC683630D EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x20C JUMP JUMPDEST PUSH2 0x86 PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x393 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO DUP1 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x508560E15717A4E9058B9A19D806CB679004A1BD953376F71FDA71C141E5DC53 SWAP1 PUSH1 0x0 SWAP1 LOG1 PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA2927D972F7CFC5FF8B7AD79F9ADF0BDB885D0E569F40D0037DF2E1299616AE0 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x214 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x264 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0xA54714518C5D275FDCD3D2A461E4858E4E8CB04FB93CD0BCA9D6D34115F26440 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x31C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x3F8 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x499 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A2646970667358221220BE0B 0xF6 PUSH29 0x28572153439087AF6F978B53B29943F16017096640F11D8E2C57D38864 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "98:1023:2:-:0;;;;;;;;;;;;-1:-1:-1;901:17:1;921:12;:10;:12::i;:::-;944:6;:18;;-1:-1:-1;;;;;;944:18:1;-1:-1:-1;;;;;944:18:1;;;;;;;978:43;;944:18;;-1:-1:-1;944:18:1;978:43;;944:6;;978:43;867:162;98:1023:2;;799:98:0;879:10;799:98;:::o;98:1023:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806349ba1b491461006757806353d6fd5914610088578063715018a6146100b65780638da5cb5b146100be578063c683630d146100e2578063f2fde38b1461011c575b600080fd5b6100866004803603602081101561007d57600080fd5b50351515610142565b005b6100866004803603604081101561009e57600080fd5b506001600160a01b038135169060200135151561020c565b6100866102c4565b6100c6610366565b604080516001600160a01b039092168252519081900360200190f35b610108600480360360208110156100f857600080fd5b50356001600160a01b0316610375565b604080519115158252519081900360200190f35b6100866004803603602081101561013257600080fd5b50356001600160a01b0316610393565b61014a6103f4565b6000546001600160a01b0390811691161461019a576040805162461bcd60e51b815260206004820181905260248201526000805160206104bf833981519152604482015290519081900360640190fd5b6002805460ff191682158015919091179091556101df576040517f508560e15717a4e9058b9a19d806cb679004a1bd953376f71fda71c141e5dc5390600090a1610209565b6040517fa2927d972f7cfc5ff8b7ad79f9adf0bdb885d0e569f40d0037df2e1299616ae090600090a15b50565b6102146103f4565b6000546001600160a01b03908116911614610264576040805162461bcd60e51b815260206004820181905260248201526000805160206104bf833981519152604482015290519081900360640190fd5b6001600160a01b038216600081815260016020908152604091829020805460ff1916851515908117909155825190815291517fa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f264409281900390910190a25050565b6102cc6103f4565b6000546001600160a01b0390811691161461031c576040805162461bcd60e51b815260206004820181905260248201526000805160206104bf833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6001600160a01b031660009081526001602052604090205460ff1690565b61039b6103f4565b6000546001600160a01b039081169116146103eb576040805162461bcd60e51b815260206004820181905260248201526000805160206104bf833981519152604482015290519081900360640190fd5b610209816103f8565b3390565b6001600160a01b03811661043d5760405162461bcd60e51b81526004018080602001828103825260268152602001806104996026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220be0bf67c28572153439087af6f978b53b29943f16017096640f11d8e2c57d38864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49BA1B49 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xC683630D EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x20C JUMP JUMPDEST PUSH2 0x86 PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x393 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO DUP1 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x508560E15717A4E9058B9A19D806CB679004A1BD953376F71FDA71C141E5DC53 SWAP1 PUSH1 0x0 SWAP1 LOG1 PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA2927D972F7CFC5FF8B7AD79F9ADF0BDB885D0E569F40D0037DF2E1299616AE0 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x214 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x264 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0xA54714518C5D275FDCD3D2A461E4858E4E8CB04FB93CD0BCA9D6D34115F26440 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x31C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x3F8 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x499 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A2646970667358221220BE0B 0xF6 PUSH29 0x28572153439087AF6F978B53B29943F16017096640F11D8E2C57D38864 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "98:1023:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;894:224;;;;;;;;;;;;;;;;-1:-1:-1;894:224:2;;;;:::i;:::-;;728:158;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;728:158:2;;;;;;;;;;:::i;1752:140:1:-;;;:::i;1110:79::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1110:79:1;;;;;;;;;;;;;;608:112:2;;;;;;;;;;;;;;;;-1:-1:-1;608:112:2;-1:-1:-1;;;;;608:112:2;;:::i;:::-;;;;;;;;;;;;;;;;;;2047:109:1;;;;;;;;;;;;;;;;-1:-1:-1;2047:109:1;-1:-1:-1;;;;;2047:109:1;;:::i;894:224:2:-;1332:12:1;:10;:12::i;:::-;1322:6;;-1:-1:-1;;;;;1322:6:1;;;:22;;;1314:67;;;;;-1:-1:-1;;;1314:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1314:67:1;;;;;;;;;;;;;;;964:8:2::1;:18:::0;;-1:-1:-1;;964:18:2::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;;993:118:::1;;1026:18;::::0;::::1;::::0;;;::::1;993:118;;;1082:17;::::0;::::1;::::0;;;::::1;993:118;894:224:::0;:::o;728:158::-;1332:12:1;:10;:12::i;:::-;1322:6;;-1:-1:-1;;;;;1322:6:1;;;:22;;;1314:67;;;;;-1:-1:-1;;;1314:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1314:67:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;808:20:2;::::1;;::::0;;;:10:::1;:20;::::0;;;;;;;;:26;;-1:-1:-1;;808:26:2::1;::::0;::::1;;::::0;;::::1;::::0;;;852;;;;;;;::::1;::::0;;;;;;;;::::1;728:158:::0;;:::o;1752:140:1:-;1332:12;:10;:12::i;:::-;1322:6;;-1:-1:-1;;;;;1322:6:1;;;:22;;;1314:67;;;;;-1:-1:-1;;;1314:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1314:67:1;;;;;;;;;;;;;;;1851:1:::1;1835:6:::0;;1814:40:::1;::::0;-1:-1:-1;;;;;1835:6:1;;::::1;::::0;1814:40:::1;::::0;1851:1;;1814:40:::1;1882:1;1865:19:::0;;-1:-1:-1;;;;;;1865:19:1::1;::::0;;1752:140::o;1110:79::-;1148:7;1175:6;-1:-1:-1;;;;;1175:6:1;1110:79;:::o;608:112:2:-;-1:-1:-1;;;;;692:20:2;668:4;692:20;;;:10;:20;;;;;;;;;608:112::o;2047:109:1:-;1332:12;:10;:12::i;:::-;1322:6;;-1:-1:-1;;;;;1322:6:1;;;:22;;;1314:67;;;;;-1:-1:-1;;;1314:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1314:67:1;;;;;;;;;;;;;;;2120:28:::1;2139:8;2120:18;:28::i;799:98:0:-:0;879:10;799:98;:::o;2262:229:1:-;-1:-1:-1;;;;;2336:22:1;;2328:73;;;;-1:-1:-1;;;2328:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:6;;;2417:38;;-1:-1:-1;;;;;2417:38:1;;;;2438:6;;;2417:38;;;2466:6;:17;;-1:-1:-1;;;;;;2466:17:1;-1:-1:-1;;;;;2466:17:1;;;;;;;;;;2262:229::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "260000",
								"executionCost": "22735",
								"totalCost": "282735"
							},
							"external": {
								"disableWhitelist(bool)": "infinite",
								"isWhitelist(address)": "1220",
								"owner()": "1081",
								"renounceOwnership()": "infinite",
								"setWhitelist(address,bool)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 1121,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 901,
									"end": 918,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 921,
									"end": 931,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 933,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 933,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 921,
									"end": 933,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 944,
									"end": 950,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 962,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1021,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1021,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 944,
									"end": 962,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1021,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 978,
									"end": 1021,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 944,
									"end": 950,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 944,
									"end": 950,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1021,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 867,
									"end": 1029,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 799,
									"end": 897,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 799,
									"end": 897,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 879,
									"end": 889,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 799,
									"end": 897,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 799,
									"end": 897,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1121,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be0bf67c28572153439087af6f978b53b29943f16017096640f11d8e2c57d38864736f6c634300060c0033",
									".code": [
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "49BA1B49"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "53D6FD59"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "C683630D"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 98,
											"end": 1121,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 728,
											"end": 886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1752,
											"end": 1892,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1752,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1752,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1752,
											"end": 1892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 608,
											"end": 720,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 608,
											"end": 720,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 608,
											"end": 720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1332,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 964,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 964,
											"end": 982,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 982,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "PUSH",
											"source": 2,
											"value": "508560E15717A4E9058B9A19D806CB679004A1BD953376F71FDA71C141E5DC53"
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "A2927D972F7CFC5FF8B7AD79F9ADF0BDB885D0E569F40D0037DF2E1299616AE0"
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1118,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 728,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1332,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 808,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 828,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 828,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 808,
											"end": 834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 834,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "A54714518C5D275FDCD3D2A461E4858E4E8CB04FB93CD0BCA9D6D34115F26440"
										},
										{
											"begin": 852,
											"end": 878,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 878,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 728,
											"end": 886,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1752,
											"end": 1892,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1752,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1332,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1854,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1854,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1854,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1814,
											"end": 1854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1854,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1865,
											"end": 1884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1884,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1892,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1181,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1181,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 608,
											"end": 720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 692,
											"end": 712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 668,
											"end": 672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 692,
											"end": 712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 692,
											"end": 712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 692,
											"end": 702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 692,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 692,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 692,
											"end": 712,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 692,
											"end": 712,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 692,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 692,
											"end": 712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 692,
											"end": 712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 608,
											"end": 720,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2047,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1332,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1314,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2139,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2120,
											"end": 2148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 799,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 879,
											"end": 889,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 799,
											"end": 897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 799,
											"end": 897,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2262,
											"end": 2491,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2262,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2336,
											"end": 2358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2491,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"disableWhitelist(bool)": "49ba1b49",
							"isWhitelist(address)": "c683630d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setWhitelist(address,bool)": "53d6fd59",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"DisableWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnableWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelist\",\"type\":\"bool\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"disable\",\"type\":\"bool\"}],\"name\":\"disableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_on\",\"type\":\"bool\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FARMING/library/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"FARMING/access/Context.sol\":{\"keccak256\":\"0xdfad2f67f9b90ef469e7cf45254362ba070ed7b6b24178522a0f23b17ef742c6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8a55551a42833a3ce0d60a6f7f697e983aba2daa16c1032311e9ca41b896dfaf\",\"dweb:/ipfs/QmQKqXVrMfhwPLb184AmCxPNMiK1KxrpxVavwfnbuJQXAL\"]},\"FARMING/access/Ownable.sol\":{\"keccak256\":\"0xa036bec141099cb001627e520dfa5858b3c16ed4c4cbbda6ed9b040d307b2817\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f739c77000cff2f766c2dd0f465a10860a2a7887ab1fbf0f52bb5d8622266e46\",\"dweb:/ipfs/QmUeiTWQ7r1wc7H9ifNMnWcNx5iAncBVLf7n65NfPEzQ3d\"]},\"FARMING/library/Whitelist.sol\":{\"keccak256\":\"0xbb3830301924b1ae02dd7bc0dd89f402d999b80cde78bf252dab5d99373e7205\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d86bcf425a8464cd3813244207bbbd7b883c74c9c420c7dcd99d8d54287c616c\",\"dweb:/ipfs/QmcGS4AYPb27uyX77JXgq6dDw846pW2EMQCiwSrYMSpt8h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "FARMING/library/Whitelist.sol:Whitelist",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 155,
								"contract": "FARMING/library/Whitelist.sol:Whitelist",
								"label": "_whitelist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 157,
								"contract": "FARMING/library/Whitelist.sol:Whitelist",
								"label": "_disable",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"FARMING/access/Context.sol": {
				"ast": {
					"absolutePath": "FARMING/access/Context.sol",
					"exportedSymbols": {
						"Context": [
							26
						]
					},
					"id": 27,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "789:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "777:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:0"
									},
									"scope": 26,
									"src": "766:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "861:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 10,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "879:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "879:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 9,
												"id": 12,
												"nodeType": "Return",
												"src": "872:17:0"
											}
										]
									},
									"documentation": null,
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "844:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "843:17:0"
									},
									"scope": 26,
									"src": "799:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "962:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 19,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$26",
														"typeString": "contract Context"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "973:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 21,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1114:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1114:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 18,
												"id": 23,
												"nodeType": "Return",
												"src": "1107:15:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "948:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 16,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "947:14:0"
									},
									"scope": 26,
									"src": "905:225:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 27,
							"src": "586:547:0"
						}
					],
					"src": "48:1085:0"
				},
				"id": 0
			},
			"FARMING/access/Ownable.sol": {
				"ast": {
					"absolutePath": "FARMING/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							146
						]
					},
					"id": 147,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 28,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "48:24:1"
						},
						{
							"absolutePath": "FARMING/access/Context.sol",
							"file": "./Context.sol",
							"id": 29,
							"nodeType": "ImportDirective",
							"scope": 147,
							"sourceUnit": 27,
							"src": "76:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 31,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 26,
										"src": "630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$26",
											"typeString": "contract Context"
										}
									},
									"id": 32,
									"nodeType": "InheritanceSpecifier",
									"src": "630:7:1"
								}
							],
							"contractDependencies": [
								26
							],
							"contractKind": "contract",
							"documentation": {
								"id": 30,
								"nodeType": "StructuredDocumentation",
								"src": "103:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146,
								26
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 146,
									"src": "645:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "645:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 40,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "703:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "734:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "702:57:1"
									},
									"src": "676:84:1"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "890:139:1",
										"statements": [
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 61,
														"src": "901:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 44,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "901:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "921:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "901:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "944:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "953:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "944:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "944:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1007:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "999:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 54,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "999:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "999:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 58,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1011:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 53,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "978:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "978:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "EmitStatement",
												"src": "973:48:1"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "768:93:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:2:1"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:0:1"
									},
									"scope": 146,
									"src": "867:162:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1157:32:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "1175:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 67,
												"id": 69,
												"nodeType": "Return",
												"src": "1168:13:1"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1037:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:2:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 71,
												"src": "1148:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1147:9:1"
									},
									"scope": 146,
									"src": "1110:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1303:98:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 75,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "1322:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 76,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1332:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1332:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1322:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1346:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1314:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1314:67:1"
											},
											{
												"id": 82,
												"nodeType": "PlaceholderStatement",
												"src": "1392:1:1"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1197:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 84,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1300:2:1"
									},
									"src": "1282:119:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1798:94:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 91,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1835:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1851:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1843:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 92,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1843:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1843:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 90,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1814:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1814:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "EmitStatement",
												"src": "1809:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 98,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1865:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1882:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1874:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 99,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1874:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1874:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1865:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1865:19:1"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1409:337:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 88,
											"modifierName": {
												"argumentTypes": null,
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 84,
												"src": "1788:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1788:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1778:2:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1798:0:1"
									},
									"scope": 146,
									"src": "1752:140:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2109:47:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 115,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2139:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 114,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2120:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2120:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2120:28:1"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1900:141:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 112,
											"modifierName": {
												"argumentTypes": null,
												"id": 111,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 84,
												"src": "2099:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2099:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 119,
												"src": "2074:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2073:18:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2109:0:1"
									},
									"scope": 146,
									"src": "2047:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2317:174:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 126,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2356:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2348:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 127,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2348:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2348:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2336:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2360:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2328:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2328:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "2328:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 136,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2438:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 137,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2446:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 135,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2417:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2417:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "EmitStatement",
												"src": "2412:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2466:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 141,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2475:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2466:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2466:17:1"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "2164:92:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "2290:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2289:18:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2317:0:1"
									},
									"scope": 146,
									"src": "2262:229:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 147,
							"src": "610:1884:1"
						}
					],
					"src": "48:2446:1"
				},
				"id": 1
			},
			"FARMING/library/Whitelist.sol": {
				"ast": {
					"absolutePath": "FARMING/library/Whitelist.sol",
					"exportedSymbols": {
						"Whitelist": [
							237
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "FARMING/access/Ownable.sol",
							"file": "../access/Ownable.sol",
							"id": 149,
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 147,
							"src": "61:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 150,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 146,
										"src": "120:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$146",
											"typeString": "contract Ownable"
										}
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "120:7:2"
								}
							],
							"contractDependencies": [
								26,
								146
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237,
								146,
								26
							],
							"name": "Whitelist",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 155,
									"mutability": "mutable",
									"name": "_whitelist",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 237,
									"src": "135:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 154,
										"keyType": {
											"id": 152,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "143:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "135:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 153,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "154:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 157,
									"mutability": "mutable",
									"name": "_disable",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 237,
									"src": "185:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 156,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "185:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 163,
									"name": "Whitelisted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "345:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "whitelist",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "371:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "371:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "344:42:2"
									},
									"src": "327:60:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 165,
									"name": "EnableWhitelist",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:2:2"
									},
									"src": "393:24:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 167,
									"name": "DisableWhitelist",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "445:2:2"
									},
									"src": "423:25:2"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "481:119:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 170,
																"name": "_disable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "500:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 171,
																	"name": "_whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "512:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 174,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 172,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "523:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "523:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "512:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "500:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "57686974656c6973743a2063616c6c6572206973206e6f74206f6e207468652077686974656c697374",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "536:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8193a60c6207ee93eb48bebd42af33b356dd6e6ca52ad6aab6a8892e28cd7323",
																"typeString": "literal_string \"Whitelist: caller is not on the whitelist\""
															},
															"value": "Whitelist: caller is not on the whitelist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8193a60c6207ee93eb48bebd42af33b356dd6e6ca52ad6aab6a8892e28cd7323",
																"typeString": "literal_string \"Whitelist: caller is not on the whitelist\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "492:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "492:88:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "492:88:2"
											},
											{
												"id": 179,
												"nodeType": "PlaceholderStatement",
												"src": "591:1:2"
											}
										]
									},
									"documentation": null,
									"id": 181,
									"name": "onlyWhitelisted",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:0:2"
									},
									"src": "456:144:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "674:46:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 188,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "692:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 190,
													"indexExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "703:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "692:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 187,
												"id": 191,
												"nodeType": "Return",
												"src": "685:27:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "c683630d",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelist",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "629:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "628:18:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "667:6:2"
									},
									"scope": 237,
									"src": "608:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "797:89:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 202,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "808:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 204,
														"indexExpression": {
															"argumentTypes": null,
															"id": 203,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "819:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "808:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 205,
														"name": "_on",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "831:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "808:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "808:26:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 209,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "864:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 210,
															"name": "_on",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "874:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 208,
														"name": "Whitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "852:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "852:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "EmitStatement",
												"src": "847:31:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "53d6fd59",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 200,
											"modifierName": {
												"argumentTypes": null,
												"id": 199,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 84,
												"src": "787:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "787:9:2"
										}
									],
									"name": "setWhitelist",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 214,
												"src": "750:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "_on",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 214,
												"src": "768:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "768:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "749:28:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:0:2"
									},
									"scope": 237,
									"src": "728:158:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "953:165:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 221,
														"name": "_disable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "964:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 222,
														"name": "disable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "975:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "964:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "964:18:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 225,
													"name": "disable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "1062:49:2",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 230,
																	"name": "EnableWhitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "1082:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1082:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 232,
															"nodeType": "EmitStatement",
															"src": "1077:22:2"
														}
													]
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "993:118:2",
												"trueBody": {
													"id": 229,
													"nodeType": "Block",
													"src": "1006:50:2",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 226,
																	"name": "DisableWhitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "1026:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1026:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 228,
															"nodeType": "EmitStatement",
															"src": "1021:23:2"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "49ba1b49",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 219,
											"modifierName": {
												"argumentTypes": null,
												"id": 218,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 84,
												"src": "943:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "943:9:2"
										}
									],
									"name": "disableWhitelist",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "disable",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "920:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "920:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "919:14:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "953:0:2"
									},
									"scope": 237,
									"src": "894:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 238,
							"src": "98:1023:2"
						}
					],
					"src": "33:1088:2"
				},
				"id": 2
			}
		}
	}
}